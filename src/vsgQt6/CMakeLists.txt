
# create and install export header which contains export macros for libraries
#
# available arguments:
#
#    <target>        pattern for generating macro names (<target>_DECLSPEC)
#                    and install paths (include/<target>/Export.h)
#
# In public c++ headers the generated file must be included with
#
#    #include <<target>/Export.h>
#
# and public classes be decorated with
#
#    class <target>_DECLSPEC <classname> ...
#
# @TODO: move to vsg
macro(add_library_export_header _TARGET)

    string(TOUPPER ${_TARGET} TARGET_UPPER)

    include(GenerateExportHeader)
    generate_export_header(${_TARGET}
        EXPORT_MACRO_NAME ${TARGET_UPPER}_DECLSPEC
        EXPORT_FILE_NAME ${VSGQT6_BINARY_DIR}/include/${_TARGET}/Export.h
    )
    install(FILES ${VSGQT6_BINARY_DIR}/include/${_TARGET}/Export.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${_TARGET})

    # pass the creation mode to the corresponding target in the cmake
    if(NOT BUILD_SHARED_LIBS)
        target_compile_definitions(${_TARGET} INTERFACE ${TARGET_UPPER}_STATIC_DEFINE)
    endif()
endmacro()

set(SOURCES
    KeyboardMap.cpp
    Window.cpp
    Viewer.cpp
    Window_QQuickWindow.cpp
    Widget.cpp
)

set(HEADERS
    ../../include/vsgQt6/KeyboardMap.h
    ../../include/vsgQt6/Window.h
    ../../include/vsgQt6/Viewer.h
    ../../include/vsgQt6/Window_QQuickWindow.h
    ../../include/vsgQt6/Widget.h
)

# shared mode is automatically chosen by setting BUILD_SHARED_LIBS=ON
# POSITION_INDEPENDENT_CODE ON is set by default in shared mode
add_library(vsgQt6 ${SOURCES} ${HEADERS})

# add definitions to enable building vsgQt6 as part of submodule
add_library(vsgQt6::vsgQt6 ALIAS vsgQt6)
set(vsgQt6_FOUND TRUE CACHE INTERNAL "vsgQt6 found.")
set(CMAKE_DISABLE_FIND_PACKAGE_vsgQt6 TRUE CACHE INTERNAL "Disable find_package(vsgQt6) as it's not necessary.")

set_target_properties(vsgQt6
    PROPERTIES
        VERSION ${VSGQT6_VERSION}
        SOVERSION ${VSGQT6_SOVERSION}
        CXX_STANDARD 17
)

target_include_directories(vsgQt6
    PUBLIC
        $<BUILD_INTERFACE:${VSGQT6_SOURCE_DIR}/include>
        $<BUILD_INTERFACE:${VSGQT6_BINARY_DIR}/include>
        $<INSTALL_INTERFACE:include>
)
target_link_libraries(vsgQt6
    PUBLIC
        ${QT_PACKAGE_NAME}::Gui
        ${QT_PACKAGE_NAME}::Widgets
        ${QT_PACKAGE_NAME}::Quick
        ${QT_PACKAGE_NAME}::QuickWidgets
        vsg::vsg
)

add_library_export_header(vsgQt6)

install(TARGETS vsgQt6 ${INSTALL_TARGETS_DEFAULT_FLAGS})
install(DIRECTORY ${VSGQT_SOURCE_DIR}/include/vsgQt6 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

file(WRITE ${VSGQT6_BINARY_DIR}/vsgQt6Config.cmake.in "#generated by cmake, do not change\ninclude(\${CMAKE_CURRENT_LIST_DIR}/vsgQt6Targets.cmake)\n")
vsg_add_cmake_support_files(
    CONFIG_TEMPLATE ${VSGQT6_BINARY_DIR}/vsgQt6Config.cmake.in
)
